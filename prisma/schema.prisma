// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  address   Address?
  addressId Int?     @unique
}

model Address {
  id        Int      @id @default(autoincrement())
  street    String
  city      String
  state     String
  zip       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int      @unique
}


model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  Int?
  supplementType String
  ingredients    String
  dosage         String
  orders      Order[]   @relation("OrderProducts")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Order {
  id                 Int               @id @default(autoincrement())
  userId             Int
  user               User              @relation(fields: [userId], references: [id])
  products           Product[]         @relation("OrderProducts")
  total              Float
  status             String
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  ShippingProvider   ShippingProvider? @relation(fields: [shippingProviderId], references: [id])
  shippingProviderId Int?
  PaymentProcessor   PaymentProcessor @relation(fields: [paymentProcessorId], references: [id])
  paymentProcessorId Int
}

model ShippingProvider {
  id        Int      @id @default(autoincrement())
  name      String
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PaymentProcessor {
  id        Int      @id @default(autoincrement())
  name      String
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
